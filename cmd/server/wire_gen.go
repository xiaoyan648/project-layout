// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-leo/leo"
	"github.com/go-leo/leo/log"
	"github.com/xiaoyan648/project-layout/internal/data"
	"github.com/xiaoyan648/project-layout/internal/model"
	"github.com/xiaoyan648/project-layout/internal/pkg/conf"
	"github.com/xiaoyan648/project-layout/internal/service"
)

// Injectors from wire.go:

// wireApp init leo application.
func initApp(server *conf.Server, confData *conf.Data, logger log.Logger) (*leo.App, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData, logger)
	greeterUsecase := model.NewGreeterUsecase(greeterRepo, logger)
	greeterService := service.NewGreeterService(greeterUsecase)
	app := newApp(logger, server, confData, greeterService)
	return app, func() {
		cleanup()
	}, nil
}
